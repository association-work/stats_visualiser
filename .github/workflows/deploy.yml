name: Deploy Application

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOMAIN: 165.232.69.153
      DEPLOY_PATH: /var/www/stats_visualiser
      MAINTENANCE_FLAG: /var/www/maintenance/stats_visualiser.flag

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.WEBAPP_DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.DOMAIN }} >> ~/.ssh/known_hosts

      - name: Build Frontend
        run: |
          pushd frontend
          npm install --ci
          npm run build
          popd

      - name: Put Site in Maintenance Mode
        run: |
          ssh deployer@${{ env.DOMAIN }} << 'EOF'
            touch ${{ env.MAINTENANCE_FLAG }}
            sudo systemctl restart nginx
          EOF

      - name: Deploy Frontend
        run: |
          # ssh deployer@165.232.69.153 << 'EOF'
          #   rm -rf ${{ env.DEPLOY_PATH }}/public/dist
          # EOF
          scp -r frontend/dist/ deployer@${{ env.DOMAIN }}:${{ env.DEPLOY_PATH }}/public/dist

      - name: Deploy Backend and dependencies
        run: |
          ssh deployer@165.232.69.153 << 'EOF'
            cd ${{ env.DEPLOY_PATH }}
            git fetch --all --tags
            git checkout ${{ github.event.release.tag_name }}

            # build frontend
            pushd frontend
            npm install --ci
            popd

            # build symfony
            composer install --no-interaction --no-dev --optimize-autoloader

            php bin/console cache:clear --env=prod

            php bin/console doctrine:migrations:migrate --no-interaction
            php bin/console tailwind:build --minify
            php bin/console asset-map:compile

            php bin/console cache:warmup --env=prod

            # Ensure www-data has proper access as a diff user is deploying
            sudo chmod -R 775 ${{ env.DEPLOY_PATH }}/var/*
            sudo chown -R www-data:www-data ${{ env.DEPLOY_PATH }}

            sudo systemctl restart php8.3-fpm
          EOF
      - name: Bring Site Back Online
        run: |
          ssh deployer@${{ env.DOMAIN }} << 'EOF'
            rm -f ${{ env.MAINTENANCE_FLAG }}
            sudo systemctl restart nginx
          EOF
